@inherits LayoutComponentBase
@inject AuthenticationStateProvider AuthStateProvider
@using BaseLibrary.DTOs
@using Client.ApplicationStates
@using ClientLibrary.Helpers

<AuthorizeView>
    <Authorized>
        <Bar Breakpoint="Breakpoint.Desktop"
             ThemeContrast="ThemeContrast.Dark"
             Background="Background.Dark"
             NavigationBreakpoint="Breakpoint.Tablet"
             Mode="BarMode.VerticalInline"
             CollapseMode="BarCollapseMode.Small"
             MenuToggleBehavior=BarMenuToggleBehavior.AllowSingleMenu>

            <BarToggler />

            <BarBrand>
                <BarItem>
                    <BarLink To="/home/dashboard">
                        <BarIcon IconName="customIcon" />
                        Hi, @context.User.Identity!.Name
                    </BarLink>
                </BarItem>
            </BarBrand>

            <BarMenu>
                <BarStart>
                    <BarItem>
                        <BarDropdown @bind-Visible="administrationElementsVisible">
                            <BarDropdownToggle>
                                <BarIcon IconName="IconName.UserTie" />
                                Administration
                            </BarDropdownToggle>
                            <BarDropdownMenu>
                                <BarDropdownItem>Users</BarDropdownItem>
                            </BarDropdownMenu>
                        </BarDropdown>
                    </BarItem>
                    <BarItem>
                        <BarDropdown @bind-Visible="departmentElementsVisible">
                            <BarDropdownToggle>
                                <BarIcon IconName="IconName.Book" />
                                Department
                            </BarDropdownToggle>
                            <BarDropdownMenu>
                                <BarDropdownItem @onclick="@GeneralDepartmentClicked">
                                    <BarIcon IconName="IconName.Users" />
                                    General
                                </BarDropdownItem>
                                <BarDropdownItem @onclick="@DepartmentClicked">
                                    Department
                                </BarDropdownItem>
                                <BarDropdownItem>
                                    Branch
                                </BarDropdownItem>
                            </BarDropdownMenu>
                        </BarDropdown>
                    </BarItem>
                </BarStart>

                <BarEnd>
                    <BarItem>
                        <BarLink To="https://Github.com/AkiVonAkira/ExaminationEMS">
                            <BarIcon Class="fa-brands fa-github"></BarIcon>
                            GitHub
                        </BarLink>
                    </BarItem>
                </BarEnd>

            </BarMenu>
        </Bar>
    </Authorized>
</AuthorizeView>

@code {
    private bool administrationElementsVisible = false;
    private bool departmentElementsVisible = true;

    RenderFragment customIcon =@<img src="../images/logos/koalaW.png" style="width:32px; height: 32px" />;

    public async Task logoutClicked()
    {
        var logoutModel = new UserSession();
        var customAuthStateProvider = (CustomAuthenticationStateProvider)AuthStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(logoutModel);
        NavManager.NavigateTo("/", forceLoad: true);
    }

    // General Department
    public bool ShowGeneralDepartment { get; set; } = false;
    private void GeneralDepartmentClicked()
    {
        ShowGeneralDepartment = !allState.ShowGeneralDepartment;
        allState.GeneralDepartmentClicked(ShowGeneralDepartment);
    }

    // Department
    public bool ShowDepartment { get; set; } = false;
    private void DepartmentClicked()
    {
        ShowDepartment = !allState.ShowDepartment;
        allState.DepartmentClicked(ShowDepartment);
    }
}