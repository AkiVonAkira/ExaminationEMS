@inherits LayoutComponentBase
@inject AuthenticationStateProvider AuthStateProvider
@using BaseLibrary.DTOs
@using Client.ApplicationStates
@using ClientLibrary.Helpers

<AuthorizeView>
    <Authorized>
        <Bar Breakpoint="Breakpoint.Desktop"
             ThemeContrast="ThemeContrast.Dark"
             Background="Background.Dark"
             NavigationBreakpoint="Breakpoint.Tablet"
             Mode="BarMode.VerticalInline"
             CollapseMode="BarCollapseMode.Small"
             MenuToggleBehavior=BarMenuToggleBehavior.AllowSingleMenu>

            <BarToggler />

            <BarBrand>
                <BarItem>
                    <BarLink To="/home/dashboard">
                        <BarIcon IconName="customIcon" />
                        Hi, @context.User.Identity!.Name
                    </BarLink>
                </BarItem>
            </BarBrand>

            <BarMenu>
                <BarStart>
                    <BarItem>
                        <BarDropdown @bind-Visible="administrationElementsVisible">
                            <BarDropdownToggle>
                                <BarIcon IconName="IconName.UserTie" />
                                Administration
                            </BarDropdownToggle>
                            <BarDropdownMenu>
                                <BarDropdownItem>Users</BarDropdownItem>
                            </BarDropdownMenu>
                        </BarDropdown>
                    </BarItem>
                    <BarItem>
                        <BarDropdown @bind-Visible="departmentElementsVisible">
                            <BarDropdownToggle>
                                <BarIcon IconName="IconName.Book" />
                                Departments
                            </BarDropdownToggle>
                            <BarDropdownMenu>
                                <BarDropdownItem @onclick="@GeneralDepartmentClicked">
                                    <BarIcon IconName="IconName.Users" />
                                    General Department
                                </BarDropdownItem>
                                <BarDropdownItem @onclick="@DepartmentClicked">
                                    Department
                                </BarDropdownItem>
                                <BarDropdownItem @onclick="@SectionClicked">
                                    Section
                                </BarDropdownItem>
                            </BarDropdownMenu>
                        </BarDropdown>
                        <BarDropdown @bind-Visible="countryElementsVisible">
                            <BarDropdownToggle>
                                <BarIcon IconName="IconName.Globe" />
                                Countries
                            </BarDropdownToggle>
                            <BarDropdownMenu>
                                <BarDropdownItem @onclick="@CountryClicked">
                                    <BarIcon IconName="IconName.Flag" />
                                    Country
                                </BarDropdownItem>
                                <BarDropdownItem @onclick="@CityClicked">
                                    City
                                </BarDropdownItem>
                                <BarDropdownItem @onclick="@StateClicked">
                                    State
                                </BarDropdownItem>
                            </BarDropdownMenu>
                        </BarDropdown>
                        <BarDropdown @bind-Visible="employeeElementsVisible">
                            <BarDropdownToggle>
                                <BarIcon IconName="IconName.Book" />
                                Employee
                            </BarDropdownToggle>
                            <BarDropdownMenu>
                                <BarDropdownItem @onclick="@EmployeeClicked">
                                    <BarIcon IconName="IconName.Users" />
                                    Employee
                                </BarDropdownItem>
                            </BarDropdownMenu>
                        </BarDropdown>
                    </BarItem>
                </BarStart>

                <BarEnd>
                    <BarItem>
                        <BarLink To="https://Github.com/AkiVonAkira/ExaminationEMS">
                            <BarIcon Class="fa-brands fa-github"></BarIcon>
                            GitHub
                        </BarLink>
                    </BarItem>
                </BarEnd>

            </BarMenu>
        </Bar>
    </Authorized>
</AuthorizeView>

@code {
    private bool administrationElementsVisible = false;
    private bool departmentElementsVisible = true;
    private bool countryElementsVisible = false;
    private bool employeeElementsVisible = false;

    RenderFragment customIcon =@<img src="../images/logos/koalaW.png" style="width:32px; height: 32px" />;

    public async Task logoutClicked()
    {
        var logoutModel = new UserSession();
        var customAuthStateProvider = (CustomAuthenticationStateProvider)AuthStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(logoutModel);
        NavManager.NavigateTo("/", forceLoad: true);
    }

    // General Department / Department / Section
    public bool ShowGeneralDepartment { get; set; } = false;
    private void GeneralDepartmentClicked() => allState.GeneralDepartmentClicked(ShowGeneralDepartment = !allState.ShowGeneralDepartment);

    public bool ShowDepartment { get; set; } = false;
    private void DepartmentClicked() => allState.DepartmentClicked(ShowDepartment = !allState.ShowDepartment);

    public bool ShowSection { get; set; } = false;
    private void SectionClicked() => allState.SectionClicked(ShowSection = !allState.ShowSection);

    // Country / City / State
    public bool ShowCountry { get; set; } = false;
    private void CountryClicked() => allState.CountryClicked(ShowCountry = !allState.ShowCountry);

    public bool ShowCity { get; set; } = false;
    private void CityClicked() => allState.CityClicked(ShowCity = !allState.ShowCity);

    public bool ShowState { get; set; } = false;
    private void StateClicked() => allState.StateClicked(ShowState = !allState.ShowState);

    // Employee
    public bool ShowEmployee { get; set; } = false;
    private void EmployeeClicked() => allState.EmployeeClicked(ShowEmployee = !allState.ShowEmployee);
}