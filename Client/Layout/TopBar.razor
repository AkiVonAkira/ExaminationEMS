@inject AuthenticationStateProvider AuthStateProvider

<Bar Breakpoint="Breakpoint.Desktop"
    ThemeContrast="ThemeContrast.Dark"
    Background="Background.Dark">

    <BarBrand>
        <BarIcon IconName="customIcon" />
        <BarLink To="/">Koala EMS</BarLink>
    </BarBrand>
    <BarToggler />
    <BarMenu>
        <BarStart>
            <BarItem>
                <AuthorizeView>
                    <Authorized>
                        <BarLink To="/home/dashboard">Dashboard</BarLink>
                    </Authorized>
                    <NotAuthorized>
                        <BarLink To="/welcome">Info</BarLink>
                    </NotAuthorized>
                </AuthorizeView>
            </BarItem>
            <BarItem>
                <BarLink To="https://Github.com/AkiVonAkira/ExaminationEMS">
                    <BarIcon Class="fa-brands fa-github"></BarIcon>
                    GitHub
                </BarLink>
            </BarItem>
        </BarStart>
        <BarEnd>
            <AuthorizeView>
                <NotAuthorized>
                    <BarItem>
                        <Button Outline Color="Color.Primary" Class="me-4">
                            <BarIcon Class="fa fa-right-to-bracket" style="width: 2rem;" aria-hidden="true"></BarIcon>
                            <BarLink Padding="Padding.Is0" TextColor="TextColor.White" To="/identity/account/login">Login</BarLink>
                        </Button>
                    </BarItem>
                    <BarItem>
                        <Button Outline Color="Color.Secondary">
                            <BarIcon Class="fa fa-user-plus" style="width: 2rem;" aria-hidden="true"></BarIcon>
                            <BarLink Padding="Padding.Is0" TextColor="TextColor.White" To="/identity/account/register">Register</BarLink>
                        </Button>
                    </BarItem>
                </NotAuthorized>
            </AuthorizeView> 

            <ProfileDropDown></ProfileDropDown>
        </BarEnd>
    </BarMenu>
</Bar>

@code {
    RenderFragment customIcon =@<img src="../images/logos/koalaBG.jpg" style="width:32px; height: 32px; border-radius: 0.25rem;" />;

    public async Task logoutClicked()
    {
        var logoutModel = new UserSession();
        var customAuthStateProvider = (CustomAuthenticationStateProvider)AuthStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(logoutModel);
        NavManager.NavigateTo("/", forceLoad: true);
    }
}