<Modal @ref="generalDepartmentDialog" @bind-Visible="IsVisible">
    <ModalContent Centered>
        <ModalHeader>
            <ModalTitle> @Title </ModalTitle>
            <CloseButton />
        </ModalHeader>
        <ModalBody>
            <Field>
                <FieldLabel>Department</FieldLabel>
                <TextEdit Placeholder="Enter name..." />
            </Field>
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Secondary" Clicked="@HideModal">Close</Button>
            <Button Color="Color.Primary" Clicked="@HideModal">Save Changes</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

@code {
    [Inject] IToastService? ToastService { get; set; }
    [Parameter] public GeneralDepartment GeneralDepartment { get; set; } = new();
    [Parameter] public EventCallback<GeneralDepartment> HandleSaveOperationEvent { get; set; }
    public bool IsVisible { get; set; } = false;
    public string Title { get; set; } = "Add Department";

    public void OpenDialog()
    {
        IsVisible = true;
        ShowModal();
        StateHasChanged();
    }

    public async Task SaveChanges()
    {
        if(string.IsNullOrEmpty(GeneralDepartment.Name))
        {
            await ToastService!.Error("Department name is required", "Missing Field");
        }
        else
        {
            IsVisible = false;
            
            await HandleSaveOperationEvent.InvokeAsync(GeneralDepartment);
            await ToastService!.Success("Department added successfully", "Saved Changes");
        }

        // if(string.IsNullOrEmpty(Department.Name))
        // {
        //     return ToastService.Error("Department name is required", "Missing Field");
        // }
        // else
        // {
        //     IsVisible = false;
        //     return ToastService.Success("Department added successfully", "Saved Changes");
        // }
                
    }

    public void ChangeTitle(string title)
    {
        Title = title;
    }

    // reference to the modal component
    private Modal? generalDepartmentDialog;

    private Task ShowModal()
    {
        return generalDepartmentDialog!.Show();
    }

    private Task HideModal()
    {
        return generalDepartmentDialog!.Hide();
    }
}