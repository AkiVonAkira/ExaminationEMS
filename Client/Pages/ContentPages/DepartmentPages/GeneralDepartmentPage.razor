@implements IDisposable

@if (allState.ShowGeneralDepartment)
{
    <Card Border="Border.Primary" Background="Background.Dark" TextColor="TextColor.White">
        <CardHeader TextColor="TextColor.White">
            <i class="fa fa-user text-primary"></i>
            General Department
            <CloseButton Class="float-end" onclick="@GeneralDepartmentClicked"></CloseButton>
        </CardHeader>
        <CardBody>
            <Table Class="rounded">
                <TableHeader TextColor="TextColor.White">
                    <TableRow Background="Background.Primary">
                        <TableHeaderCell>#</TableHeaderCell>
                        <TableHeaderCell>Id</TableHeaderCell>
                        <TableHeaderCell>General Department</TableHeaderCell>
                        <TableHeaderCell>Action</TableHeaderCell>
                    </TableRow>
                </TableHeader>
                <TableBody>
                    @if (GeneralDepartments is not null)
                    {
                        int count = 1;
                        foreach (var item in GeneralDepartments)
                        {
                            <TableRow>
                                <TableRowHeader>@count</TableRowHeader>
                                <TableRowCell>@item.Id</TableRowCell>
                                <TableRowCell>@item.Name</TableRowCell>
                                <TableRowCell>
                                    <i class="fa fa-pencil" id="cursor-style" 
                                    @onclick="()=>EditClicked(item)"></i>
                                    @* <i class="fa fa-trash text-danger" id="cursor-style" 
                                    @onclick="()=>DeleteClicked(item)"></i> *@
                                    </TableRowCell>
                            </TableRow>
                            count++;
                        }
                    }
                    else
                    {
                        <TableRow>
                            <TableRowCell ColumnSpan="4">
                                No General Department Added yet!
                            </TableRowCell> 
                        </TableRow>
                    }
                    @*<TableRow Background="Background.Transparent">
                        <TableRowHeader>1</TableRowHeader>
                        <TableRowCell>Ilyas</TableRowCell>
                        <TableRowCell>Kaya</TableRowCell>
                        <TableRowCell>@@Turkish Delight</TableRowCell>
                    </TableRow Background="Background.Transparent">
                    <TableRow Background="Background.Transparent">
                        <TableRowHeader>2</TableRowHeader>
                        <TableRowCell>Muse</TableRowCell>
                        <TableRowCell>Yusuf</TableRowCell>
                        <TableRowCell>@@Somalian FinalBoss</TableRowCell>
                    </TableRow>
                    <TableRow Background="Background.Transparent">
                        <TableRowHeader>3</TableRowHeader>
                        <TableRowCell>Caius</TableRowCell>
                        <TableRowCell>Matei</TableRowCell>
                        <TableRowCell>@@Romanian Final Boss</TableRowCell>
                    </TableRow> *@
                </TableBody>
            </Table>
        </CardBody>
        <CardFooter>
            <Form>
                <Button Color="Color.Primary" @onclick="@OpenDialog">Add department</Button>
            </Form>
        </CardFooter>
    </Card>
}

<GeneralDepartmentDialog @ref="generalDepartmentDialog" 
    HandleSaveOperationEvent="HandleSaveOperationEvent" 
    generalDepartment="generalDepartment" /> 

@code {
    [Inject] IToastService? ToastService { get; set; }
    GeneralDepartmentDialog? generalDepartmentDialog; 
    GeneralDepartment generalDepartment = new();
    public string Title { get; set; } = "";
    public List<GeneralDepartment> GeneralDepartments { get; set; } = new();

    protected async override Task OnInitializedAsync()
    {
        await GetGeneralDepartments();
        allState.Action += StateHasChanged;
    }

    public async Task GetGeneralDepartments()
    {
        GeneralDepartments = await generalDepartmentService.GetAll(ClientConstants.GeneralDepartmentBaseUrl);
    }

    void OpenDialog()
    {
        generalDepartmentDialog?.OpenDialog();
    }

    private async Task HandleSaveOperationEvent(GeneralDepartment generalDepartment)
    {
        bool successCheck = false; 
        if (this.generalDepartment.Id > 0)
        {
            var result = await generalDepartmentService.Update(this.generalDepartment, ClientConstants.GeneralDepartmentBaseUrl);
            successCheck = await DisplayMessage(result.Flag, result.Message);
        } 
        else
        {
            var response = await generalDepartmentService.Insert(this.generalDepartment, ClientConstants.GeneralDepartmentBaseUrl);
            successCheck = await DisplayMessage(response.Flag, response.Message);
        }
        if (successCheck) 
        {
            this.generalDepartment = new ();
            await GetGeneralDepartments();
            generalDepartmentDialog?.ChangeTitle("Add");
        }
    }

    private void EditClicked(GeneralDepartment department)
    {
        generalDepartmentDialog?.ChangeTitle("Update");
        generalDepartment = department;
        OpenDialog();
    }

    private void DeleteClicked(GeneralDepartment department)
    {
        generalDepartmentDialog?.ChangeTitle("Delete");
        generalDepartment = department;
        OpenDialog();
    }

    private async Task<bool> DisplayMessage(bool flag, string message)
    {
        if(flag)
        {
            await ToastService!.Success(message, "Success");
            return true;
        }
        else
        {
            await ToastService!.Error(message, "Error");
            return false;
        }
    }

    public void Dispose()
    {
        allState.Action -= StateHasChanged;
    }

    private void GeneralDepartmentClicked()
    {
        allState.GeneralDepartmentClicked(false);
    }
}