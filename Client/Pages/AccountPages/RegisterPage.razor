@page "/identity/account/register"
@using Client.Pages.OtherPages
@layout AuthenticationLayout
<div class="container vh-100 w-100 d-flex justify-content-center align-items-center">
    <div class="col-lg-6">
        <EditForm Enhance Model="User" OnValidSubmit="HandleRegistration">
            <DataAnnotationsValidator />
            <div class="card bg-dark rounded-3 text-white fw-bold bg-opacity-50">
                <div class="card-header text-center fs-5 mb-2">Register</div>
                <div class="container">
                    <div class="row justify-content-center align-items-center">
                        <div class="col-lg-4 col-md-4 col-sm-4 text-center">
                            <img class="rounded ratio-1x1"
                                 src="../images/logos/koalaW.png" height="50" width="50" />
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="form-group">
                        <label class="form-label">Full Name</label>
                        <InputText @bind-Value="User.Fullname" class="form-control" autocomplete="nickname"></InputText>
                    </div>
                    <div class="form-group mt-3">
                        <label class="form-label">Email</label>
                        <InputText @bind-Value="User.Email" class="form-control" autocomplete="username"></InputText>
                    </div>
                    <div class="form-group mt-3">
                        <label class="form-label">Password</label>
                        <input type="password" @bind="User.Password" class="form-control" autocomplete="new-password"></input>
                    </div>
                    <div class="form-group mt-3">
                        <label class="form-label">Confirm Password</label>
                        <input type="password" @bind="User.ConfirmPassword" class="form-control" autocomplete="new-password"></input>
                    </div>
                    <div class="form-group mt-3">
                        @if (ShowLoadingButton)
                        {
                            <ButtonLoadingSpinner></ButtonLoadingSpinner>
                        }
                        else
                        {
                            <button class="btn btn-outline-primary float-end" type="submit">Register</button>
                        }
                    </div>
                </div>
                <div class="card-footer">
                    <span>
                        Have an account? |
                        <a class="btn-link" href="identity/account/login">Sign In Here</a>
                    </span>
                    <ValidationSummary />
                </div>
            </div>
        </EditForm>
    </div>
</div>

@code {
    public bool ShowLoadingButton { get; set; } = false;

    Register User = new();

    [CascadingParameter] public Task<AuthenticationState> authenticationStateTask { get; set; }
    protected override async Task OnInitializedAsync()
    {
        await CheckUserAuthentication();
    }

    async Task HandleRegistration()
    {
        ShowLoadingButton = true;
        var result = await accountService.CreateAsync(User);
        if (result.Flag)
        {
            User = new();
        }
        else
        {

        }
        ShowLoadingButton = false;
    }

    private async Task CheckUserAuthentication()
    {
        var user = (await authenticationStateTask).User;
        bool isAuthenticated = user.Identity!.IsAuthenticated;
        if (isAuthenticated)
        {
            NavManager.NavigateTo("/home/dashboard");
        }
    }
}